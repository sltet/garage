{
    "swagger": "2.0",
    "info": {
        "contact": {
            "name": "Steve Landry Tene",
            "email": "steve.landry@cloudpit.ca"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/",
    "paths": {
        "/appointments": {
            "get": {
                "description": "find all appointments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointment"
                ],
                "summary": "find all appointments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Appointment"
                            }
                        }
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "description": "find all companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "find all companies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "create company",
                "parameters": [
                    {
                        "description": "the company to create",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "description": "find by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "find by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user to create",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                }
            }
        },
        "/service-operations": {
            "get": {
                "description": "find all garage service operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operation"
                ],
                "summary": "find all garage service operations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceOperation"
                            }
                        }
                    }
                }
            }
        },
        "/service-operations/{id}": {
            "get": {
                "description": "find all garage service operation by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operation"
                ],
                "summary": "find all garage service operation by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServiceOperation"
                        }
                    }
                }
            }
        },
        "/service-requests": {
            "get": {
                "description": "find all services requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service request"
                ],
                "summary": "find all service requests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceRequest"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "find all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "find all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create user",
                "parameters": [
                    {
                        "description": "the user to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "find user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "find user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "description": "update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the user to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vehicles": {
            "get": {
                "description": "find all vehicles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "find all vehicles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vehicle"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Appointment": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Automatically managed by GORM for creation time",
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Automatically managed by GORM for update time",
                    "type": "string"
                }
            }
        },
        "Company": {
            "type": "object",
            "properties": {
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "description": "Automatically managed by GORM for creation time",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Automatically managed by GORM for update time",
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "CompanyCreate": {
            "type": "object",
            "required": [
                "address_line_1",
                "address_line_2",
                "city",
                "country",
                "email",
                "phone",
                "postal_code",
                "state"
            ],
            "properties": {
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "LocalizedMessage": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "Operation": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Automatically managed by GORM for creation time",
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/LocalizedMessage"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/LocalizedMessage"
                },
                "service_operation_id": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Automatically managed by GORM for update time",
                    "type": "string"
                }
            }
        },
        "ServiceOperation": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Automatically managed by GORM for creation time",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/LocalizedMessage"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Operation"
                    }
                },
                "updatedAt": {
                    "description": "Automatically managed by GORM for update time",
                    "type": "string"
                }
            }
        },
        "ServiceRequest": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Automatically managed by GORM for creation time",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Automatically managed by GORM for update time",
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Automatically managed by GORM for creation time",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Automatically managed by GORM for update time",
                    "type": "string"
                }
            }
        },
        "UserCreate": {
            "description": "UserCreate information with user firstname and lastname",
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@doe.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2,
                    "example": "john"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2,
                    "example": "doe"
                }
            }
        },
        "UserUpdate": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@doe.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2,
                    "example": "john"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2,
                    "example": "doe"
                }
            }
        },
        "Vehicle": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Automatically managed by GORM for creation time",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Automatically managed by GORM for update time",
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    }
}